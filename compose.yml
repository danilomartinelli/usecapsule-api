name: usecapsule-api

services:
  # PostgreSQL Database for Auth Service
  auth-postgres:
    image: postgres:15-alpine
    container_name: usecapsule-auth-postgres
    environment:
      POSTGRES_DB: usecapsule_auth
      POSTGRES_USER: usecapsule_auth
      POSTGRES_PASSWORD: usecapsule_dev_password
      PGDATA: /var/lib/postgresql/data/pgdata
    ports:
      - '5432:5432'
    volumes:
      - auth_postgres_data:/var/lib/postgresql/data
      - ./init-scripts:/docker-entrypoint-initdb.d
    networks:
      - usecapsule-network
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U usecapsule_auth -d usecapsule_auth']
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  # RabbitMQ Message Broker
  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: usecapsule-rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: usecapsule
      RABBITMQ_DEFAULT_PASS: usecapsule_dev_password
      RABBITMQ_DEFAULT_VHOST: /
    ports:
      - '5672:5672' # AMQP
      - '15672:15672' # Management UI
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - usecapsule-network
    healthcheck:
      test: ['CMD', 'rabbitmq-diagnostics', 'ping']
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: usecapsule-redis
    command: redis-server --appendonly yes --requirepass usecapsule_dev_password
    ports:
      - '6379:6379'
    volumes:
      - redis_data:/data
    networks:
      - usecapsule-network
    healthcheck:
      test: ['CMD', 'redis-cli', '--raw', 'incr', 'ping']
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  # HashiCorp Vault
  vault:
    image: hashicorp/vault:1.15
    container_name: usecapsule-vault
    environment:
      VAULT_DEV_ROOT_TOKEN_ID: usecapsule-dev-token
      VAULT_DEV_LISTEN_ADDRESS: 0.0.0.0:8200
      VAULT_DEV_DISABLE_TOKEN_DISPLAY: true
    ports:
      - '8200:8200'
    volumes:
      - vault_data:/vault/data
    networks:
      - usecapsule-network
    healthcheck:
      test: ['CMD', 'vault', 'status']
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    cap_add:
      - IPC_LOCK

volumes:
  auth_postgres_data:
    driver: local
  rabbitmq_data:
    driver: local
  redis_data:
    driver: local
  vault_data:
    driver: local

networks:
  usecapsule-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
