# Capsule PHP SDK

SDK oficial da plataforma Capsule para aplicações PHP.

## Características

### Versões Suportadas
- PHP 8.1+
- Composer package manager
- PSR-4 autoloading
- PSR-7 HTTP messages

### Framework Integrations
- Laravel service provider
- Symfony bundle
- CodeIgniter library
- WordPress plugin

## Funcionalidades Planejadas

### Client Base
```php
<?php
use Capsule\Client;

$capsule = new Client([
    'api_key' => getenv('CAPSULE_API_KEY'),
    'base_url' => 'https://api.usecapsule.com',
    'timeout' => 30
]);
```

### Deploy Management
```php
// Deploy simples
$deployment = $capsule->deployments()->create([
    'name' => 'php-app',
    'image' => 'php:8.2-fpm-alpine',
    'port' => 80,
    'env' => [
        'APP_ENV' => 'production',
        'PHP_MEMORY_LIMIT' => '256M'
    ]
]);

// Aguardar deploy
$capsule->deployments()->waitForReady($deployment->id, 300);
```

### Streaming Logs
```php
// Generator para logs
foreach ($capsule->deployments()->logs($deploymentId, ['follow' => true]) as $line) {
    echo $line . PHP_EOL;
}
```

### Laravel Integration
```php
// config/services.php
'capsule' => [
    'api_key' => env('CAPSULE_API_KEY'),
    'base_url' => env('CAPSULE_BASE_URL', 'https://api.usecapsule.com'),
],

// Service Provider
use Capsule\Laravel\CapsuleServiceProvider;

// Em AppServiceProvider
public function boot()
{
    $this->app->register(CapsuleServiceProvider::class);
}

// Usage em Controller
public function deploy(Request $request)
{
    $deployment = app('capsule')->deployments()->create([
        'name' => $request->name,
        'image' => $request->image,
    ]);
    
    return response()->json($deployment);
}
```

## Estrutura Planejada

```
apps/tools/sdk/php/
├── src/
│   ├── Client.php
│   ├── Resources/
│   │   ├── Deployments.php
│   │   ├── Projects.php
│   │   └── Environments.php
│   ├── Integrations/
│   │   ├── Laravel/
│   │   ├── Symfony/
│   │   └── WordPress/
│   └── Exceptions/
├── tests/
├── examples/
│   ├── basic-deploy.php
│   ├── laravel-example.php
│   └── wordpress-plugin.php
├── composer.json
└── README.md
```

### Type Declarations

```php
<?php
declare(strict_types=1);

namespace Capsule\Types;

class DeploymentOptions
{
    public function __construct(
        public string $name,
        public string $image,
        public ?int $port = null,
        public ?array $env = null,
        public ?int $replicas = 1
    ) {}
}

class Deployment
{
    public function __construct(
        public string $id,
        public string $name,
        public string $status,
        public \DateTimeInterface $createdAt
    ) {}
}
```

### Exception Handling

```php
<?php
namespace Capsule\Exceptions;

class CapsuleException extends \Exception
{
    public function __construct(
        string $message,
        public readonly string $code,
        public readonly ?array $details = null,
        \Throwable $previous = null
    ) {
        parent::__construct($message, 0, $previous);
    }
}
```

### WordPress Plugin

```php
<?php
// WordPress plugin integration
class CapsuleWordPressPlugin
{
    public function __construct()
    {
        add_action('init', [$this, 'init']);
        add_action('admin_menu', [$this, 'addAdminMenu']);
    }
    
    public function addAdminMenu()
    {
        add_menu_page(
            'Capsule Deploy',
            'Capsule',
            'manage_options',
            'capsule-deploy',
            [$this, 'adminPage']
        );
    }
}
```