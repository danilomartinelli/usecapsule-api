# ============================================================================
# Capsule Platform - Environment Configuration
# ============================================================================
# This file contains all environment variables required by the microservices
# in the Capsule Platform. Each service has its own section with specific
# configuration requirements.
#
# Usage:
#   - Copy this file to .env for local development
#   - Set appropriate values for your environment
#   - Use deployment tools to set production values
# ============================================================================

# ============================================================================
# Global Environment Configuration
# ============================================================================
# These variables are shared across multiple services

NODE_ENV=development
APP_ENV=local
LOG_LEVEL=info

# RabbitMQ Configuration (shared by all microservices)
RABBITMQ_URL=amqp://usecapsule:usecapsule_dev_password@localhost:7010
RABBITMQ_RETRY_ATTEMPTS=3
RABBITMQ_RETRY_DELAY=1000

# Redis Configuration (shared by all microservices)
REDIS_HOST=localhost
REDIS_PORT=7120
REDIS_PASSWORD=
REDIS_DB=0

# ============================================================================
# API Gateway Configuration
# ============================================================================
# HTTP entry point for the entire platform (Port 3000)
API_GATEWAY_PORT=3000


# JWT Configuration
API_GATEWAY_JWT_SECRET=your-super-secure-jwt-secret-key-minimum-32-chars
API_GATEWAY_JWT_EXPIRATION=15m

# Rate Limiting
API_GATEWAY_RATE_LIMIT_TTL=60
API_GATEWAY_RATE_LIMIT_MAX=100

# CORS Configuration
API_GATEWAY_CORS_ENABLED=true
API_GATEWAY_CORS_ORIGINS=http://localhost:3000,http://localhost:3010

# ============================================================================
# Auth Service Configuration
# ============================================================================
# Authentication and user management microservice

# Database Configuration
AUTH_SERVICE_DB_HOST=localhost
AUTH_SERVICE_DB_PORT=7110
AUTH_SERVICE_DB_NAME=auth_service_db
AUTH_SERVICE_DB_USER=auth_user
AUTH_SERVICE_DB_PASSWORD=auth_pass
AUTH_SERVICE_DB_SSL=false

# JWT Configuration
AUTH_SERVICE_JWT_SECRET=your-super-secure-jwt-secret-key-minimum-32-chars
AUTH_SERVICE_JWT_EXPIRATION=15m
AUTH_SERVICE_JWT_REFRESH_EXPIRATION=7d

# Security
AUTH_SERVICE_BCRYPT_ROUNDS=10

# GitHub OAuth (Optional)
AUTH_SERVICE_GITHUB_CLIENT_ID=your-github-client-id
AUTH_SERVICE_GITHUB_CLIENT_SECRET=your-github-client-secret

# ============================================================================
# Billing Service Configuration
# ============================================================================
# Subscription and payment processing microservice

# Database Configuration
BILLING_SERVICE_DB_HOST=localhost
BILLING_SERVICE_DB_PORT=7113
BILLING_SERVICE_DB_NAME=billing_service_db
BILLING_SERVICE_DB_USER=billing_user
BILLING_SERVICE_DB_PASSWORD=billing_pass
BILLING_SERVICE_DB_SSL=false

# Stripe Configuration
BILLING_SERVICE_STRIPE_SECRET_KEY=sk_test_your_stripe_secret_key
BILLING_SERVICE_STRIPE_PUBLISHABLE_KEY=pk_test_your_stripe_publishable_key
BILLING_SERVICE_STRIPE_WEBHOOK_SECRET=whsec_your_webhook_secret

# Billing Settings
BILLING_SERVICE_CURRENCY=usd
BILLING_SERVICE_TRIAL_PERIOD_DAYS=14
BILLING_SERVICE_INVOICE_GRACE_PERIOD_DAYS=7

# ============================================================================
# Deploy Service Configuration
# ============================================================================
# Container builds and Kubernetes deployment orchestration

# Database Configuration
DEPLOY_SERVICE_DB_HOST=localhost
DEPLOY_SERVICE_DB_PORT=7111
DEPLOY_SERVICE_DB_NAME=deploy_service_db
DEPLOY_SERVICE_DB_USER=deploy_user
DEPLOY_SERVICE_DB_PASSWORD=deploy_pass
DEPLOY_SERVICE_DB_SSL=false

# Kubernetes Configuration
DEPLOY_SERVICE_KUBERNETES_API_URL=https://kubernetes.default.svc:443
DEPLOY_SERVICE_KUBERNETES_TOKEN=your-kubernetes-service-account-token
DEPLOY_SERVICE_KUBERNETES_NAMESPACE=default

# Container Registry Configuration
DEPLOY_SERVICE_REGISTRY_URL=registry.capsule.dev
DEPLOY_SERVICE_REGISTRY_USERNAME=your-registry-username
DEPLOY_SERVICE_REGISTRY_PASSWORD=your-registry-password

# Build Configuration
DEPLOY_SERVICE_MAX_CONCURRENT_BUILDS=5
DEPLOY_SERVICE_BUILD_TIMEOUT_SECONDS=600

# ============================================================================
# Monitor Service Configuration
# ============================================================================
# Metrics collection, observability, and alerting

# Database Configuration
MONITOR_SERVICE_DB_HOST=localhost
MONITOR_SERVICE_DB_PORT=7112
MONITOR_SERVICE_DB_NAME=monitor_service_db
MONITOR_SERVICE_DB_USER=monitor_user
MONITOR_SERVICE_DB_PASSWORD=monitor_pass
MONITOR_SERVICE_DB_SSL=false

# Prometheus Configuration (Optional)
MONITOR_SERVICE_PROMETHEUS_URL=http://localhost:9090
MONITOR_SERVICE_PROMETHEUS_PUSHGATEWAY_URL=http://localhost:9091

# Grafana Configuration (Optional)
MONITOR_SERVICE_GRAFANA_URL=http://localhost:3000
MONITOR_SERVICE_GRAFANA_API_TOKEN=your-grafana-api-token

# Alertmanager Configuration (Optional)
MONITOR_SERVICE_ALERTMANAGER_URL=http://localhost:9093

# Metrics Settings
MONITOR_SERVICE_METRICS_COLLECTION_INTERVAL_SECONDS=60
MONITOR_SERVICE_METRICS_RETENTION_DAYS=90

# Alert Thresholds
MONITOR_SERVICE_ALERT_CPU_THRESHOLD_PERCENT=80
MONITOR_SERVICE_ALERT_MEMORY_THRESHOLD_PERCENT=85
MONITOR_SERVICE_ALERT_DISK_THRESHOLD_PERCENT=90

# ============================================================================
# Flyway Database Migration Configuration
# ============================================================================
# These variables are used by Flyway for database migrations across all services
# Set these when running database migrations for each service

# For Auth Service migrations
# FLYWAY_URL=jdbc:postgresql://localhost:7110/auth_service_db
# FLYWAY_USER=auth_user
# FLYWAY_PASSWORD=auth_pass

# For Billing Service migrations
# FLYWAY_URL=jdbc:postgresql://localhost:7113/billing_service_db
# FLYWAY_USER=billing_user
# FLYWAY_PASSWORD=billing_pass

# For Deploy Service migrations
# FLYWAY_URL=jdbc:postgresql://localhost:7111/deploy_service_db
# FLYWAY_USER=deploy_user
# FLYWAY_PASSWORD=deploy_pass

# For Monitor Service migrations
# FLYWAY_URL=jdbc:postgresql://localhost:7112/monitor_service_db
# FLYWAY_USER=monitor_user
# FLYWAY_PASSWORD=monitor_pass

# ============================================================================
# Development Notes
# ============================================================================
#
# Port Allocation:
# - API Gateway: 3000 (HTTP)
# - RabbitMQ: 7010 (Management: 15672)
# - Redis: 7120
# - Auth DB: 7110
# - Deploy DB: 7111
# - Monitor DB: 7112
# - Billing DB: 7113
#
# Security Reminders:
# - Change all default passwords in production
# - Use strong, unique JWT secrets (minimum 32 characters)
# - Enable SSL for database connections in production
# - Store sensitive credentials in secure secret management systems
# - Rotate API keys and tokens regularly
#
# Service Dependencies:
# - All services require RabbitMQ to be running
# - Each service requires its own PostgreSQL database
# - API Gateway is the only service accepting external HTTP traffic
# - Microservices communicate only via RabbitMQ message queues
